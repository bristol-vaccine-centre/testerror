% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/true_panel_prevalence.R
\name{true_panel_prevalence}
\alias{true_panel_prevalence}
\title{Calculate an estimate of true prevalence for a single panel and components}
\usage{
true_panel_prevalence(
  test_results = testerror::.input_data,
  false_pos_controls = NULL,
  n_controls = NULL,
  false_neg_diseased = NULL,
  n_diseased = NULL,
  ...,
  sens = NULL,
  spec = NULL,
  panel_name = "Panel",
  confint = 0.95,
  method = c("rogan-gladen", "lang-reiczigel", "bayes"),
  na.rm = TRUE
)
}
\arguments{
\item{test_results}{A dataframe containing the following columns:
\itemize{
\item id (character) - the patient identifier
\item test (factor) - the test type
\item result (logical) - the test result
}

Ungrouped.

No default value.}

\item{false_pos_controls}{the number of positives that appeared in the specificity
disease-free control group. These are by definition false positives. This
is (1-specificity)*n_controls}

\item{n_controls}{the number of controls in the specificity
disease-free control group.}

\item{false_neg_diseased}{the number of negatives that appeared in the sensitivity
confirmed disease group. These are by definition false negatives. This
is (1-sensitivity)*n_diseased}

\item{n_diseased}{the number of confirmed disease cases in the sensitivity
control group.}

\item{...}{
  Arguments passed on to \code{\link[=uncertain_panel_rogan_gladen]{uncertain_panel_rogan_gladen}}, \code{\link[=prevalence_panel_lang_reiczigel]{prevalence_panel_lang_reiczigel}}, \code{\link[=bayesian_panel_complex_model]{bayesian_panel_complex_model}}, \code{\link[=bayesian_panel_true_prevalence_model]{bayesian_panel_true_prevalence_model}}, \code{\link[=bayesian_panel_simpler_model]{bayesian_panel_simpler_model}}, \code{\link[=bayesian_panel_logit_model]{bayesian_panel_logit_model}}
  \describe{
    \item{\code{samples}}{number fo random draws of sensitivity and specificity}
    \item{\code{fmt}}{a \code{sprintf} formatting string accepting 3 numbers}
    \item{\code{panel_sens}}{the prior sensitivity of the panel as a \code{beta_dist}
(optional)}
    \item{\code{panel_spec}}{the prior specificity of the panel as a \code{beta_dist}
(optional)}
    \item{\code{cache_result}}{save the result of the sampling in memory for the current
session}
    \item{\code{chains}}{A positive integer specifying the number of Markov chains. 
    The default is 4.}
    \item{\code{iter}}{A positive integer specifying the number of iterations for each 
    chain (including warmup). The default is 2000.}
    \item{\code{warmup}}{A positive integer specifying the number of warmup (aka burnin)
    iterations per chain. If step-size adaptation is on (which it is by default), 
    this also controls the number of iterations for which adaptation is run (and
    hence these warmup samples should not be used for inference). The number of 
    warmup iterations should be smaller than \code{iter} and the default is
    \code{iter/2}.}
    \item{\code{model_type}}{The bayesian model used one of "logit", "simpler", "complex"}
  }}

\item{sens}{the prior sensitivity of the test as a \code{beta_dist}.}

\item{spec}{the prior specificity of the test as a \code{beta_dist}.}

\item{panel_name}{the name of the panel for combined result}

\item{confint}{confidence interval limits}

\item{method}{one of:
\itemize{
\item "lang-reiczigel": Frequentist confidence limits
\item "bayes": Bayesian analysis
\item "rogan-gladen": Rogan gladen with uncertainty
}}

\item{na.rm}{exclude patients with missing results}
}
\value{
A dataframe containing the following columns:
\itemize{
\item test (character) - the name of the test or panel
\item prevalence.lower (numeric) - the lower estimate
\item prevalence.median (numeric) - the median estimate
\item prevalence.upper (numeric) - the upper estimate
\item prevalence.method (character) - the method of estimation
\item prevalence.label (character) - a fomatted label of the true prevalence estimate with CI
}

Ungrouped.

No default value.
}
\description{
Uses apparent prevalence, and uncertain
estimates of test sensitivity and test specificity for the 3 methods
described in Supplementary 2. This function works for a single panel per
dataframe, multiple panels will need to call this function multiple times
in a \code{group_modify}.
}
\examples{
tmp = testerror:::panel_example()
true_panel_prevalence(
  test_results = tmp$samples \%>\% dplyr::select(id,test,result = observed),
  false_pos_controls = tmp$performance$false_pos_controls,
  n_controls = tmp$performance$n_controls,
  false_neg_diseased = tmp$performance$false_neg_diseased,
  n_diseased = tmp$performance$n_diseased,
  method = "rogan-gladen"
)
}
